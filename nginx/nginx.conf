events {
    worker_connections 1024;  # Número máximo de conexões por worker
}

http {
    upstream simple-sum {
        server 172.17.0.1:9001;  # IP da interface docker0 (para Linux). Mudar apenas o numero da porta.
    }

    upstream cardsage-api {
        server 172.17.0.1:8001;
    }

    upstream blink-api {
        server 172.17.0.1:8002;
    }

    upstream blink {
        server 172.17.0.1:9002;
    }

    upstream cryptlink-api {
        server 172.17.0.1:8003;
    }

    upstream cryptlink {
        server 172.17.0.1:9003;
    }

    upstream phpmyadmin {
        server 172.17.0.1:9004;
    }

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Reduza os tamanhos de buffers
    sendfile_max_chunk 512k;
    client_body_buffer_size 10k;
    client_max_body_size 8m;

    # Desative buffers de cache
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;

    # ---------------------------------------------------------------- FRONT-END ------------------------------------------------
    
    # SIMPLE-SUM
    server {
        listen 80;
        server_name simple-sum.abelcode.dev;

        location / {
            proxy_pass http://simple-sum;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # Use o esquema da requisição original (http ou https)
        }
    }

    # BLINK-FRONT
    server {
        listen 80;
        server_name blink.abelcode.dev;

        location / {
            proxy_pass http://blink;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # Use o esquema da requisição original (http ou https)
        }
    }

    # CRYPTLINK-FRONT
    server {
        listen 80;
        server_name cryptlink.abelcode.dev;

        location / {
            proxy_pass http://cryptlink;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # Use o esquema da requisição original (http ou https)
        }
    }

    # PHPMYADMIN
    server {
        listen 80;
        server_name mysql.abelcode.dev;

        location / {
            proxy_pass http://phpmyadmin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # Use o esquema da requisição original (http ou https)
        }
    }

    # ---------------------------------------------------------------- BACK-END ------------------------------------------------
    
    # CARDSAGE-API
    server {
        listen 80;
        server_name cardsage-api.abelcode.dev;

        location / {
            proxy_pass http://cardsage-api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # Use o esquema da requisição original (http ou https)
        }
    }

    # BLINK-API
    server {
        listen 80;
        server_name blk.abelcode.dev;

        location / {
            proxy_pass http://blink-api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # Use o esquema da requisição original (http ou https)
        }
    }

    # CRYPTLINK-API
    server {
        listen 80;
        server_name cryptlink-api.abelcode.dev;

        location / {
            proxy_pass http://cryptlink-api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # Use o esquema da requisição original (http ou https)
        }
    }
}