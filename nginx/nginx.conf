events {
    worker_connections  1024;  # Número máximo de conexões por worker
}

http {
    upstream nome_app_01 {
        server localhost:9002;  # localhost + porta usada
    }

    upstream nome_app_02 {
        server localhost:8002; # localhost + porta usada
    }

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Reduza os tamanhos de buffers
    sendfile_max_chunk 512k;
    client_body_buffer_size 10k;
    client_max_body_size 8m;

    # Desative buffers de cache
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;

    # ---------------------------------------------------------------- FRONT-END ------------------------------------------------
    
    # APP 01
    server {
        listen 80;
        server_name 18.229.158.112:9001;  # IP público da instância + porta do container

        location / {
            proxy_pass http://nome_app_01;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # Use o esquema da requisição original (http ou https)
        }
    }

    # APP 02
    server {
        listen 80;
        server_name 18.229.158.112:8002;  # IP público da instância + porta do container

        location / {
            proxy_pass http://nome_app_02;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # Use o esquema da requisição original (http ou https)
        }
    }
}